#include <bits/stdc++.h>
using namespace std;
int v,e;
map<int,pair<int,int> >edges;

int bellman_ford()
{
    map<int,int>distance;
    for(int i=1;i<=v;i++)
      distance[i]=INT_MAX;
      
    distance[1]=0;
    
    for(int i=1;i<v;i++)
    {
        for(auto x:edges)
      {
         if(distance[x.first]+x.second.second<distance[x.second.first])
            distance[x.second.first]=distance[x.first]+x.second.second;
      }
        
    }
    
     for(auto x:edges)
      {
         if(distance[x.first]+x.second.second<distance[x.second.first])
              return 1;
      }
    
    
    
    return 0;
    
    
    
}

int main() {
	
	int t; cin>>t;
	
	while(t--)
	{
	    cin>>v>>e;
	    
	    for(int i=0;i<e;i++)
	    {
	        int x,y,z; cin>>x>>y>>z;
	        edges[x]=make_pair(y,z);
	    }
	    
	    cout<<bellman_ford()<<endl;
	    edges.clear();
	    
	    
	}

	return 0;
}
