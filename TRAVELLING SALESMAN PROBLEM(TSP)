#include<bits/stdc++.h>
using namespace std;

#define INT_MAXI 99999

 int n=4;
    // Adjacency matrix which defines the graph.
    int dist[10][10]={
        {0,20,42,25},
        {20,0,30,34},
        {42,30,0,10},
        {25,34,10,0}
        
    };
    
    
     // mask for tracing the cities which are visited
     int VISITED_ALL =(1<<n)-1;
     
int tsp(int mask,int pos)
{
    if(mask==VISITED_ALL)
      return dist[pos][0];
      
      int ans=INT_MAXI;
      
    // try to go to unvisited cities
     for(int city=0;city<n;city++)
     {
         if((mask & (1<<city))==0)
            {
                int new_ans = dist[pos][city] + tsp((mask|(1<<city)),city);
                ans=min(ans,new_ans);
            }
     }
     
     return ans;
}

int main()
{
   
   cout<<tsp(1,0)<<endl;
    
    
    
    
    
    
    
    
    
    
    
    return 0;
    
}
