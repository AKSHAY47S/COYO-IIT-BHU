#include<bits/stdc++.h>
using namespace std;

int matrix[25][25];

int fun(int n,int m)
{
    int dp[25][25];
    memset(dp,0,sizeof(dp));
    for(int i=0;i<n;i++)
       dp[i][0]=matrix[i][0];
       
    for(int j=1;j<m;j++)
    {
        for(int i=0;i<n;i++)
        {
            if(i==0 && j>=1)
            {
                dp[i][j] = max(dp[i][j-1],dp[i+1][j-1])+matrix[i][j];
            }
            else if(i==n-1 && j>=1 && i>=1)
            {
                dp[i][j] = max(dp[i][j-1],dp[i-1][j-1])+matrix[i][j];
            }
            else if(j>=1 && i>=1)
            {
                dp[i][j] = max(dp[i][j-1],max(dp[i+1][j-1],dp[i-1][j-1]))+matrix[i][j];
            }
        }
    }
    int ans=INT_MIN;
    
    for(int i=0;i<n;i++)
    {
        ans=max(ans,dp[i][m-1]);
    }
    
    return ans;
}




int main() {
	
	int t; cin>>t;
	
	while(t--)
	{
	    int n,m; cin>>n>>m;
	    
	    memset(matrix,0,sizeof(matrix));
	    
	    for(int i=0;i<n;i++)
	    {
	        for(int j=0;j<m;j++)
	        {
	            cin>>matrix[i][j];
	        }
	    }
	    
	    cout<<fun(n,m)<<endl;
	}
	
	
	
	
	
	
	return 0;
}
