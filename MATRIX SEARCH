int Solution::searchMatrix(vector<vector<int> > &a, int b) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details
    
    int rows=a.size(),col=a[0].size();
    //int mat[rows*col];
    
  /* vector< pair<int,pair<int,int> > >vp;
   
   for(int i=0;i<rows;i++)
   {
       vp.push_back(make_pair(i,make_pair(a[i][0],a[i][col-1])));
   }
    
    int high=vp.size()-1,low=0;
    
    while(high>=low)
    {
        int mid=low+(high-low)/2;
        
        if(vp[mid].second.first<=b && vp[mid].second.second>=b)
        {
            auto it = lower_bound(a[mid].begin(),a[mid].end(),b);
            if(it!=a[mid].end())
              return 1;
            else
              return 0;
        }
        else if(vp[mid].second.first>b)
           high=mid-1;
        else
           low=mid+1;
    }
    
    return 0;*/
    
    
    
    int l=0,r=col*rows-1;
    
    while(r!=l)
    {
        int mid=(r+l-1)>>1;
        
        if(a[mid/rows][mid%col]<b)
           l=mid+1;
        else if(a[mid/rows][mid%col]>b)
           r=mid;
    }
    
    return a[r/col][r%col]==b;
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
}
