#include <bits/stdc++.h>
using namespace std;
int n,m,k;
string s1,s2,s3;

int fun_dp()
{
    int dp[n+1][m+1][k+1];
    
    memset(dp,0,sizeof(dp));
    
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            for(int p=1;p<=k;p++)
            {
                if(s1[i-1]==s2[j-1]&& s2[j-1]==s3[p-1] && s1[i-1]==s3[p-1])
                   dp[i][j][p]=1+dp[i-1][j-1][p-1];
                else
                   {
                       int max1=max(dp[i-1][j][p],max(dp[i][j-1][p],dp[i][j][p-1]));
                       int max2=max(dp[i-1][j-1][p],max(dp[i][j-1][p-1],dp[i-1][j][p-1]));
                       dp[i][j][p]=max(max1,max2);
                   }
                   
            }
        }
    }
    
    
    return dp[n][m][k];
    
    
}


int main() {
    
    int t; cin>>t;
    
    while(t--)
    {
        cin>>n>>m>>k>>s1>>s2>>s3;
        cout<<fun_dp()<<endl;
    }
	
	
	
	
	
	
	return 0;
}
