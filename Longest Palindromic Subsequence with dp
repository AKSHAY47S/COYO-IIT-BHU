#include <bits/stdc++.h>
using namespace std;

int fun1(string s)
{
    if(s.length()==1)
      return 1;
      
    if(s[0]==s[s.length()-1])
      return 2+fun1(s.substr(1,s.length()-2));
    else
     return max(fun1(s.substr(1,s.length()-1)),fun1(s.substr(0,s.length()-1)));
      
      
}

int fun(string s)
{
    int n=s.length();
    int dp[n][n];
    memset(dp,0,sizeof(dp));
    
    for(int i=0;i<n;i++)
         dp[i][i]=1;
         
    for(int l=2;l<=n;l++)
    {
        for(int i =0;i<n-l+1;i++)
        {
            int j=i+l-1;
            
            if(s[i]==s[j] && l==2)
              dp[i][j]=2;
            else if(s[i]==s[j])
             dp[i][j]=2+dp[i+1][j-1];
            else
             dp[i][j] = max(dp[i+1][j],dp[i][j-1]);
        }
    }
    
    return dp[0][n-1];
}













int main() {
    
    string s("GEEKSFORGEEKS");
    
    cout<<fun(s)<<endl;




return 0;
}
