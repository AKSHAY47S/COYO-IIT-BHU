int Solution::longestSubsequenceLength(const vector<int> &a) {
    
    int n=a.size();
    if(n==0)
       return 0;
    if(n==1)
      return 1;
    
    int dp1[n];
    dp1[0]=1;
    
    for(int i=1;i<n;i++)
    {   dp1[i]=INT_MIN;
        for(int j=0;j<i;j++)
           if(a[j]<a[i])
             dp1[i]=max(dp1[i],1+dp1[j]);
             
        if(dp1[i]==INT_MIN)
           dp1[i]=1;
    }
    
    int dp2[n];
    dp2[n-1]=1;
    
    for(int i=n-2;i>=0;i--)
    {
        dp2[i]=INT_MIN;
        for(int j=i+1;j<n;j++)
          if(a[i]>a[j])
             dp2[i]=max(dp2[i],1+dp2[j]);
             
        if(dp2[i]==INT_MIN)
           dp2[i]=1;
    }
    
    int ans=INT_MIN;
    
    for(int i=0;i<n;i++)
       ans=max(dp1[i]+dp2[i]-1,ans);
       
       return ans;
    
    
    
}
