#include <bits/stdc++.h>
using namespace std;

bool palindrome(string s)
{
    int n=s.length();
    int i=0,j=n-1;
    
    while(i<=j)
    {
        if(s[i]!=s[j])
           return false;
           
        if( s[i]==s[j] && i==j && i==n/2)
             return true;
           
        i++; j--;   
    }
    
    if(i>j && !(n&1))
       return true;
    
}

int fun(string s)
{
    int n=s.length();
    int dp[n][n];
    bool p[n][n];
    memset(dp,0,sizeof(dp));
    
    for(int i=0;i<n;i++)
    {
        dp[i][i]=0;
        p[i][i]=true;
    }
    
    for(int l=2;l<=n;l++)
    {
        for(int i=0;i<n-l+1;i++)
        {
            int j=i+l-1;
            
            if(l==2)
              p[i][j]= (s[i]==s[j]);
            else
              p[i][j] = (s[i]==s[j]  && p[i+1][j-1]);
              
            if(p[i][j]==true)
              dp[i][j]=0;
            else
            {
                dp[i][j]=INT_MAX;
                
                for(int k=i;k<j;k++)
                {
                    dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+1][j]+1);
                }
                
            }
            
            
        }
    }
    
     return dp[0][n-1];
}


int main() {
	
	int t; cin>>t;
	
	while(t--)
	{
	    string s; cin>>s;
	    
	    cout<<fun(s)<<endl;
	}
	
	return 0;
}
