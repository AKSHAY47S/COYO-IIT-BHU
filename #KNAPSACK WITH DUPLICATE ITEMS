#include <bits/stdc++.h>
using namespace std;

/*int fun_dp(int*val,int*weight,int n,int maxw)
{
    int dp[n+1][maxw+1];
    
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=maxw;j++)
        {
            if(i==0 || j==0)
                 dp[i][j]=0;
            else if(weight[i-1]<=j)
               dp[i][j]=max(val[i-1]+dp[i-1][j-weight[i-1]],val[i-1]+)
        }
    }
}*/

int f(int*val,int*weight,int n,int maxw)
{
    if(n==0 || maxw==0)
      return 0;
      
    if(weight[n-1]<=maxw)
     return max(f(val,weight,n-1,maxw-weight[n-1])+val[n-1],max(f(val,weight,n,maxw-weight[n-1])+val[n-1],f(val,weight,n-1,maxw)));
     
     return f(val,weight,n-1,maxw);
}



int main() {
	
	int t; cin>>t;
	
	while(t--)
	{
	     int n,maxw; cin>>n>>maxw;
	     int val[n],weit[n];
	     
	     for(int i=0;i<n;i++)
	          cin>>val[i];
	          
	     for(int i=0;i<n;i++)
	          cin>>weit[i];
	          
	     cout<<f(val,weit,n,maxw)<<endl;
	            
	           
	}
	
	

	return 0;
}
